From 8b1ae01fe7d0ec0f8683b372ed34a320f544a148 Mon Sep 17 00:00:00 2001
From: Yabin Cui <yabinc@google.com>
Date: Wed, 26 Oct 2022 10:29:58 -0700
Subject: [PATCH] Revert "[clang] fix missing initialization of original number
 of expansions"

This reverts commit b8a1b698afb2fc84819c7596090aabf4d826b436.

Change-Id: I10a1027092682e5b45bca18a37b85eb07136b568
---
 clang/docs/ReleaseNotes.rst                   |  2 --
 clang/lib/Sema/TreeTransform.h                |  1 -
 .../CXX/temp/temp.decls/temp.variadic/p5.cpp  | 22 -------------------
 3 files changed, 25 deletions(-)

diff --git a/clang/docs/ReleaseNotes.rst b/clang/docs/ReleaseNotes.rst
index baa64bd508c4..fe57224d82b1 100644
--- a/clang/docs/ReleaseNotes.rst
+++ b/clang/docs/ReleaseNotes.rst
@@ -124,8 +124,6 @@ Bug Fixes
 - Fix `#57008 <https://github.com/llvm/llvm-project/issues/57008>`_ - Builtin
   C++ language extension type traits instantiated by a template with unexpected
   number of arguments cause an assertion fault.
-- Fix multi-level pack expansion of undeclared function parameters.
-  This fixes `Issue 56094 <https://github.com/llvm/llvm-project/issues/56094>`_.
 - Fix `#57151 <https://github.com/llvm/llvm-project/issues/57151>`_.
   ``-Wcomma`` is emitted for void returning functions.
 - ``-Wtautological-compare`` missed warnings for tautological comparisons
diff --git a/clang/lib/Sema/TreeTransform.h b/clang/lib/Sema/TreeTransform.h
index 0ae3c7785966..db47a9451a80 100644
--- a/clang/lib/Sema/TreeTransform.h
+++ b/clang/lib/Sema/TreeTransform.h
@@ -5791,7 +5791,6 @@ bool TreeTransform<Derived>::TransformFunctionTypeParams(
                                        = dyn_cast<PackExpansionType>(OldType)) {
       // We have a function parameter pack that may need to be expanded.
       QualType Pattern = Expansion->getPattern();
-      NumExpansions = Expansion->getNumExpansions();
       SmallVector<UnexpandedParameterPack, 2> Unexpanded;
       getSema().collectUnexpandedParameterPacks(Pattern, Unexpanded);
 
diff --git a/clang/test/CXX/temp/temp.decls/temp.variadic/p5.cpp b/clang/test/CXX/temp/temp.decls/temp.variadic/p5.cpp
index 6c4c260cdf8f..206e9f73e9f0 100644
--- a/clang/test/CXX/temp/temp.decls/temp.variadic/p5.cpp
+++ b/clang/test/CXX/temp/temp.decls/temp.variadic/p5.cpp
@@ -469,25 +469,3 @@ int fn() {
   bar(b);
 }
 }
-
-namespace pr56094 {
-template <typename... T> struct D {
-  template <typename... U> using B = int(int (*...p)(T, U));
-  // expected-error@-1 {{pack expansion contains parameter pack 'U' that has a different length (1 vs. 2) from outer parameter packs}}
-  template <typename U1, typename U2> D(B<U1, U2> *);
-  // expected-note@-1 {{in instantiation of template type alias 'B' requested here}}
-};
-using t1 = D<float>::B<int>;
-// expected-note@-1 {{in instantiation of template class 'pr56094::D<float>' requested here}}
-
-template <bool...> struct F {};
-template <class...> struct G {};
-template <bool... I> struct E {
-  template <bool... U> using B = G<F<I, U>...>;
-  // expected-error@-1 {{pack expansion contains parameter pack 'U' that has a different length (1 vs. 2) from outer parameter packs}}
-  template <bool U1, bool U2> E(B<U1, U2> *);
-  // expected-note@-1 {{in instantiation of template type alias 'B' requested here}}
-};
-using t2 = E<true>::B<false>;
-// expected-note@-1 {{in instantiation of template class 'pr56094::E<true>' requested here}}
-} // namespace pr56094
-- 
2.38.0.135.g90850a2211-goog

